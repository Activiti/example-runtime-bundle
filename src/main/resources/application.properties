spring.application.name=${ACT_RB_APP_NAME:rb-my-app}

#default connector stream config comes from activiti-cloud-services-connectors in activiti-cloud-runtime-bundle-service

#default event stream config comes from activiti-cloud-services-events in activiti-cloud-runtime-bundle-service

#below streams are only needed if using message-based commands
#if doing so then channels impls needed - see MessageClientStream in cmdendpoint test config of activiti-cloud-runtime-bundle-service
#spring.cloud.stream.bindings.myCmdResults.destination=${ACT_RB_COMMAND_RESULTS_DEST:commandResults}
#spring.cloud.stream.bindings.myCmdResults.group=${ACT_RB_COMMAND_RESULTS_GROUP:myCmdGroup}
#spring.cloud.stream.bindings.myCmdResults.contentType=${ACT_RB_COMMAND_RESULTS_CONTENT_TYPE:application/json}
#spring.cloud.stream.bindings.myCmdProducer.destination=${ACT_RB_COMMAND_RESULTS_DEST:commandConsumer}
#spring.cloud.stream.bindings.myCmdProducer.contentType=${ACT_RB_COMMAND_RESULTS_CONTENT_TYPE:application/json}

spring.jackson.serialization.fail-on-unwrapped-type-identifiers=${ACT_RB_JACKSON_FAIL_ON_UNWRAPPED_IDS:false}

#default keycloak config comes through automatically from activiti-cloud-services-keycloak

# this user needs to have the realm management roles assigned
spring.rabbitmq.host=${ACT_RABBITMQ_HOST:rabbitmq}

spring.activiti.useStrongUuids=true

#zipkin
spring.zipkin.base-url= http://zipkin:80/
spring.zipkin.sender.type= web
spring.sleuth.enabled = true
spring.sleuth.sampler.probability = 1.0

activiti.cloud.application.name=default-app
